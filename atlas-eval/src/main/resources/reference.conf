
atlas.eval {
  stream {
    queue-size = 1000
    backends = [
      {
        host = "localhost"
        eureka-uri = "http://localhost:7102/v2/vips/local-dev:7001"
        instance-uri = "http://{local-ipv4}:{port}"
      }
    ]

    // Number of buffers to use for the time grouping. More buffers means that data has
    // more time to accumulate and there is less chance of data being dropped because it
    // is too old
    num-buffers = 1

    // Broad tag keys that should be ignored for the purposes of dropping expensive queries
    // that will be prohibitive to match. These are typically tags that will be applied to
    // everything within a given deployment scope.
    ignored-tag-keys = [
      "nf.account",
      "nf.region"
    ]
  }

  graph {
    step = ${atlas.core.model.step}

    start-time = e-3h
    end-time = now
    timezone = US/Pacific
    width = 700
    height = 300
    theme = "light"
    palette = armytage

    // Don't permit more that 1440 datapoints (1 day at minute resolution) for a single graph
    max-datapoints = 1440

    // Set of output formats to support via the graph API
    engines = [
      "com.netflix.atlas.chart.CommaSepGraphEngine",
      "com.netflix.atlas.chart.TabSepGraphEngine",
      "com.netflix.atlas.chart.JsonGraphEngine",
      "com.netflix.atlas.chart.StatsJsonGraphEngine",
      "com.netflix.atlas.chart.StdJsonGraphEngine",
      "com.netflix.atlas.chart.V2JsonGraphEngine",
      "com.netflix.atlas.chart.DefaultGraphEngine"
    ]

    // Vocabulary to use for the graph API. The value can be "default" or a class representing
    // the vocabulary to use.
    vocabulary = "default"

    // If set to true, the graph uri will be encoded as a Source iTXt field in the generated
    // png image. This can be useful for debugging and possibly other tooling, but increases
    // the image sizes and may not be desirable if the image may be shared externally.
    png-metadata-enabled = false

    // Pattern to use to detect that a user-agent is a web-browser
    browser-agent-pattern = "mozilla|msie|gecko|chrome|opera|webkit"
  }
}