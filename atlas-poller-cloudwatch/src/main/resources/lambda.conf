
atlas {
  cloudwatch {

    // http://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions-metrics.html
    lambda = {
      namespace = "AWS/Lambda"
      period = 1m

      metrics = [
        {
          name = "ConcurrentExecutions"
          alias = "aws.lambda.concurrentExecutions"
          conversion = "max"
          tags = [
            {
              key = "concurrencyLimit"
              value = "reserved"
            }
          ]
        },
        {
          name = "UnreservedConcurrentExecutions"
          alias = "aws.lambda.concurrentExecutions"
          conversion = "max"
          tags = [
            {
              key = "concurrencyLimit"
              value = "unreserved"
            }
          ]
        },
      ]
    }

    lambda-fn-res = {
      namespace = "AWS/Lambda"
      period = 1m

      dimensions = [
        "FunctionName",
        "Resource"
      ]

      metrics = [
        {
          name = "DeadLetterErrors"
          alias = "aws.lambda.deadLetterErrors"
          conversion = "sum,rate"
        },
        {
          name = "Duration"
          alias = "aws.lambda.duration"
          conversion = "timer-millis"
        },
        {
          name = "Errors"
          alias = "aws.lambda.errors"
          conversion = "sum,rate"
        },
        {
          name = "Invocations"
          alias = "aws.lambda.invocations"
          conversion = "sum,rate"
        },
        {
          name = "IteratorAge"
          alias = "aws.lambda.iteratorAge"
          conversion = "max"
        },
        {
          name = "Throttles"
          alias = "aws.lambda.throttles"
          conversion = "sum,rate"
        },
      ]
    }
  }
}